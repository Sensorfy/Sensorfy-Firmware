/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_PROTO_CONFIG_PB_H_INCLUDED
#define PB_PROTO_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _NodeSettings {
    uint32_t version;
    char node_name[33];
    float location_lat;
    float location_long;
} NodeSettings;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define NodeSettings_init_default                {0, "", 0, 0}
#define NodeSettings_init_zero                   {0, "", 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define NodeSettings_version_tag                 1
#define NodeSettings_node_name_tag               2
#define NodeSettings_location_lat_tag            3
#define NodeSettings_location_long_tag           4

/* Struct field encoding specification for nanopb */
#define NodeSettings_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   version,           1) \
X(a, STATIC,   SINGULAR, STRING,   node_name,         2) \
X(a, STATIC,   SINGULAR, FLOAT,    location_lat,      3) \
X(a, STATIC,   SINGULAR, FLOAT,    location_long,     4)
#define NodeSettings_CALLBACK NULL
#define NodeSettings_DEFAULT NULL

extern const pb_msgdesc_t NodeSettings_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define NodeSettings_fields &NodeSettings_msg

/* Maximum encoded size of messages (where known) */
#define NodeSettings_size                        50

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
